package network.crypto;

import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.Security;

import javax.crypto.Mac;
import javax.crypto.SecretKey;

import org.bouncycastle.jce.provider.BouncyCastleProvider;

import generic.server.ARequete;

public abstract class AHMAC {
    static 
    {
        Security.addProvider(new BouncyCastleProvider());
    }
    
    public static byte[] hashHMac(Mac hmac,SecretKey secretKey, ARequete req) throws InvalidKeyException, IllegalStateException, IOException
    {
	byte [] _hmac = null;
	hmac.init(secretKey);
	hmac.update(ConverterObject.convertObjectToByte(req));
	return _hmac;
    }
    
    public static byte[] hashHMac(String algo,String povider,SecretKey secretKey, ARequete req) throws InvalidKeyException, IllegalStateException, IOException
    {
	Mac hmac = Mac.getInstance(algo, provider); 
	byte [] _hmac = null;
	hmac.init(secretKey);
	hmac.update(ConverterObject.convertObjectToByte(req));
	return _hmac;
    }
}
